{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction pushProp(target, key, value) {\n  if (key === 'className') {\n    target.className = [target.className, value].join(' ').trim();\n  } else if (key === 'style') {\n    target.style = __assign({}, target.style, value);\n  } else if (typeof value === 'function') {\n    var oldFn_1 = target[key];\n    target[key] = oldFn_1 ? function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      oldFn_1.apply(void 0, args);\n      value.apply(void 0, args);\n    } : value;\n  } else if (\n  // skip merging undefined values\n  value === undefined ||\n  // skip if both value are the same primitive value\n  typeof value !== 'object' && value === target[key]) {\n    return;\n  } else if (!(key in target)) {\n    target[key] = value;\n  } else {\n    throw new Error(\"Didn\\u2019t know how to merge prop '\" + key + \"'. \" + \"Only 'className', 'style', and event handlers are supported\");\n  }\n}\n/**\n * Merges sets of props together:\n *  - duplicate `className` props get concatenated\n *  - duplicate `style` props get shallow merged (later props have precedence for conflicting rules)\n *  - duplicate functions (to be used for event handlers) get called in order from left to right\n * @param props Sets of props to merge together. Later props have precedence.\n */\nfunction mergeProps() {\n  var props = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    props[_i] = arguments[_i];\n  }\n  if (props.length === 1) {\n    return props[0];\n  }\n  return props.reduce(function (merged, ps) {\n    for (var key in ps) {\n      pushProp(merged, key, ps[key]);\n    }\n    return merged;\n  }, {});\n}\nexports.default = mergeProps;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAEA,SAASA,QAAQ,CACfC,MAA8B,EAC9BC,GAAW,EACXC,KAAU;EAEV,IAAID,GAAG,KAAK,WAAW,EAAE;IACvBD,MAAM,CAACG,SAAS,GAAG,CAACH,MAAM,CAACG,SAAS,EAAED,KAAK,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;GAC9D,MAAM,IAAIJ,GAAG,KAAK,OAAO,EAAE;IAC1BD,MAAM,CAACM,KAAK,gBAAQN,MAAM,CAACM,KAAK,EAAKJ,KAAK,CAAE;GAC7C,MAAM,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;IACtC,IAAMK,OAAK,GAAGP,MAAM,CAACC,GAAG,CAAyB;IACjDD,MAAM,CAACC,GAAG,CAAC,GAAGM,OAAK,GAAG;MAAC;WAAA,UAAc,EAAdC,qBAAc,EAAdA,IAAc;QAAdC;;MACrBF,OAAK,eAAIE,IAAI;MACZP,KAAkB,eAAIO,IAAI;IAC7B,CAAC,GAAGP,KAAK;GACV,MAAM;EACH;EACAA,KAAK,KAAKQ,SAAS;EACnB;EACC,OAAOR,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAKF,MAAM,CAACC,GAAG,CAAE,EACpD;IACF;GACD,MAAM,IAAI,EAAEA,GAAG,IAAID,MAAM,CAAC,EAAE;IAC3BA,MAAM,CAACC,GAAG,CAAC,GAAGC,KAAK;GACpB,MAAM;IACL,MAAM,IAAIS,KAAK,CACb,yCAAkCV,GAAG,QAAK,GAC1C,6DAA6D,CAC9D;;AAEL;AAEA;;;;;;;AAOA,SAAwBW,UAAU;EAAiB;OAAA,UAAW,EAAXJ,qBAAW,EAAXA,IAAW;IAAXK;;EASjD,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAOD,KAAK,CAAC,CAAC,CAAQ;;EAGxB,OAAOA,KAAK,CAACE,MAAM,CAAC,UAACC,MAAM,EAAEC,EAAO;IAClC,KAAK,IAAMhB,GAAG,IAAIgB,EAAE,EAAE;MACpBlB,QAAQ,CAACiB,MAAM,EAAEf,GAAG,EAAEgB,EAAE,CAAChB,GAAG,CAAC,CAAC;;IAEhC,OAAOe,MAAM;EACf,CAAC,EAAE,EAAE,CAAQ;AACf;AAnBAE","names":["pushProp","target","key","value","className","join","trim","style","oldFn_1","_i","args","undefined","Error","mergeProps","props","length","reduce","merged","ps","exports"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}